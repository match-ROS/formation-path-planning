<?xml version="1.0"?>
<launch>
    <arg name="gazebo_gui" default="false"/> <!--Start without Gazebo GUI, RVIZ is enough-->

    <!--Variables for the robot0-->
    <arg name="robot0_name" value="robot0"/>
    <arg name="robot0_namespace" value="$(arg robot0_name)"/>
    <arg name="robot0_tf_prefix" value="$(arg robot0_name)"/>
    <arg name="robot0_x_pos" default="-9.0"/>
    <arg name="robot0_y_pos" default="0.5"/>
    <arg name="robot0_yaw_rot" default="0.0"/>

    <!--Variables for the robot1-->
    <arg name="robot1_name" value="robot1"/>
    <arg name="robot1_namespace" value="$(arg robot1_name)"/>
    <arg name="robot1_tf_prefix" value="$(arg robot1_name)"/> 
    <arg name="robot1_x_pos" default="-9.0"/>
    <arg name="robot1_y_pos" default="-0.5"/>
    <arg name="robot1_yaw_rot" default="0.0"/>

    <!--Constant values that cant be adjusted from outside the launch file-->
    <!--For this example only the robot0 will get an -->
    <!-- <arg name="navigation_rviz_command_args" value="-d $(find fpp_launch)/rviz/formation_path_planner_rviz_config.rviz"/> -->

    <!-- <node name="fpp_navigation_rviz" pkg="rviz" type="rviz" respawn="false" 
            args="$(arg navigation_rviz_command_args)" output="screen"/> -->
    
    <!--This node is necessary so the fpp is able to reconfigure the costmap inflation_radius-->
    <node name="dyn_reconfig_relay_node" pkg="fpp_ros" type="dyn_reconfig_relay_node" 
                  respawn="false" output="screen"/>

    <!--Create namespace for robot0 and start everything that belongs in the namespace inside the group-->
    <group ns="$(arg robot0_namespace)">
        <!--This parameter is necessary to define the name of the robot in this namespace-->
        <param name="robot_name" type="str" value="$(arg robot0_name)"/> 

        <include file="$(find mir_launch_hardware)/launch/mir.launch">
            <arg name="tf_prefix" value="$(arg robot0_name)"/>
            <arg name="move_base_selector" value="move_base_flex"/>
            <arg name="global_planner" value="FormationPathPlanner"/>
            <arg name="local_planner" value="FormationPathController"/>
            <!-- <arg name="x_pos" value="$(arg robot0_x_pos)"/>
            <arg name="y_pos" value="$(arg robot0_y_pos)"/>
            <arg name="yaw_rot" value="$(arg robot0_yaw_rot)"/> -->
        </include>
        
        <!--Override the existing global_planner params-->
        <rosparam file="$(find fpp_launch)/config/fpp_two_parallel_robot_params.yaml" command="load" ns="move_base_flex"/>
		<rosparam file="$(find fpp_launch)/config/fpc_two_parallel_robot_params.yaml" command="load" ns="move_base_flex"/>

		<!--Overwrite the enabled param that defines if new obstacles should be inserted into the global costmap. -->
        <!--Because of the mobile robots detecting each other this would add obstacles where the formation is standing -->
        <param name="move_base_flex/global_costmap/obstacles/enabled" value="false"/>

        <!--This node is necessary to easily set the target position for the move_base_flex package through rviz-->
        <!--If a different path planner should be used, change the planner that is defined in the relay-->
        <!--Typically you copy this node to where you need a changed path planner. This one should stay default.-->
        <node pkg="fpp_launch" type="move_base_legacy_relay.py" name="move_base_legacy_relay" output="screen"/>

        <group ns="move_base_flex">
            <node pkg="formation_costmap" type="formation_footprint_node" name="formation_footprint_node" output="screen">
                <!--Load params for the formation costmap layer-->
                <rosparam file="$(find fp_tests)/config/single_robot_config/costmap_params.yaml" command="load"/>
            </node>
        </group>
    </group>

    <!--Create namespace for robot1 and start everything that belongs in the namespace inside the group-->
    <group ns="$(arg robot1_namespace)">
        <!--This parameter is necessary to define the name of the robot in this namespace-->
        <param name="robot_name" type="str" value="$(arg robot1_name)"/> 

        <include file="$(find mir_launch_hardware)/launch/mir.launch">
            <arg name="tf_prefix" value="$(arg robot1_name)"/>
            <arg name="move_base_selector" value="move_base_flex"/>
            <arg name="global_planner" value="FormationPathPlanner"/>
            <arg name="local_planner" value="FormationPathController"/>
            <!-- <arg name="x_pos" value="$(arg robot0_x_pos)"/>
            <arg name="y_pos" value="$(arg robot0_y_pos)"/>
            <arg name="yaw_rot" value="$(arg robot0_yaw_rot)"/> -->
        </include>

        <!--Override the existing global_planner params-->
        <rosparam file="$(find fpp_launch)/config/fpp_two_parallel_robot_params.yaml" command="load" ns="move_base_flex"/>
		<rosparam file="$(find fpp_launch)/config/fpc_two_parallel_robot_params.yaml" command="load" ns="move_base_flex"/>

		<!--Overwrite the enabled param that defines if new obstacles should be inserted into the global costmap. -->
        <!--Because of the mobile robots detecting each other this would add obstacles where the formation is standing -->
        <param name="move_base_flex/global_costmap/obstacles/enabled" value="false"/>

        <!--If rviz should also be started for second robot, insert the start of rviz with the specified config here.-->

        <!--This node is necessary to easily set the target position for the move_base_flex package through rviz-->
        <!--If a different path planner should be used, change the planner that is defined in the relay-->
        <!--Typically you copy this node to where you need a changed path planner. This one should stay default.-->
        <node pkg="fpp_launch" type="move_base_legacy_relay.py" name="move_base_legacy_relay" output="screen"/>

		<!-- <include file="$(find fpp_launch)/launch/formation_costmap.launch"/> -->
    </group>

    <!--Record the data of the formation path planner so failures can be comprehended afterwards-->
    <!-- <include file="$(find fpp_launch)/launch/record_fpp.launch"/> -->
</launch>